{"version":3,"sources":["helpers/getData.js","types/types.js","actions/ui.js","actions/auth.js","hooks/useForm.js","components/auth/Login.js","routers/AuthRouter.js","routers/PublicRoute.js","routers/PrivateRoute.js","components/BackgroundAside.js","components/nav-bar/NavBar.js","components/templates/RouteNavigation.js","components/templates/TitlePage.js","components/templates/DescriptionPage.js","components/dashboard/ItemStore.js","components/dashboard/Stores.js","components/Footer.js","components/dashboard/FormSearch.js","actions/dashboard.js","components/templates/ItemPizza.js","components/templates/Pizzas.js","components/modals/body-carrousel/BodyModal.js","components/modals/body-carrousel/HeaderModal.js","components/modals/body-carrousel/ModalCarrousel.js","selectors/getStoresById.js","components/dashboard/Dashboard.js","selectors/getStoresByName.js","routers/DashboardRoutes.js","routers/AppRouter.js","reducers/authReducer.js","reducers/dashboardReducer.js","reducers/uiReducer.js","store/store.js","components/auth/AuthContext.js","App.js","index.js"],"names":["getData","a","instanceAxios","axios","create","baseURL","process","REACT_APP_URL","get","types","login","logout","uiStartLoading","uiFinishLoading","dasboardStartLoadingStores","startLoading","type","finishLoading","name","payload","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","value","Login","history","dispatch","useDispatch","loading","useSelector","state","ui","usuario","password","formValues","handleLogin","e","preventDefault","lastPath","localStorage","getItem","email","then","resp","user","data","response","users","find","setItem","catch","err","startLoginEmailPassword","replace","className","id","src","alt","placeholder","autoComplete","onChange","href","onClick","disabled","AuthRouter","exact","path","component","to","PublicRoute","loggedIn","Component","rest","props","PrivateRoute","BackgroundAside","NavBar","RouteNavigation","route","TitlePage","title","myStyle","DescriptionPage","description","ItemStore","itemStore","params","queryString","parse","location","search","q","address","Stores","stores","map","Footer","rel","FormSearch","searchText","onSubmit","JSON","stringify","push","onKeyUp","setStores","ItemPizza","itemPizza","Pizzas","pizzas","BodyModal","storeToShow","products","HeaderModal","currentItem","ModalCarrousel","show","useMemo","filter","store","getStoresById","undefined","length","reactDom","createPortal","document","querySelector","Dashboard","useLocation","parseInt","auth","dashboard","query","useEffect","logoAside","getElementById","style","display","storesFiltered","toLocaleLowerCase","includes","getStoresByName","DashboardRoutes","pathname","AppRouter","logged","checking","setChecking","setLoggedIn","loggedLocalstorage","authReducer","action","propTypes","PropTypes","object","isRequired","dashBoardReducer","msgError","uiReducer","uiSetError","uiRemoveError","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","createStore","applyMiddleware","thunk","AuthContext","createContext","init","App","useReducer","Provider","ReactDOM","render"],"mappings":"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","file":"static/js/main.26adb81d.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst getData = async() => {\r\n    const instanceAxios = axios.create({\r\n        baseURL: process.env.REACT_APP_URL\r\n    });\r\n\r\n    return await instanceAxios.get();\r\n}\r\n\r\nexport default getData;\r\n","export const types = {\r\n    login: '[auth] login',\r\n    logout: '[auth] logout',\r\n\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    dasboardStartLoadingStores: '[Dashboard] Start loading stores'\r\n}","import { types } from \"../types/types\";\r\n\r\nexport const setError = ( err ) => ({\r\n    type: types.uiSetError,\r\n    payload: err\r\n});\r\n\r\nexport const removeError = () => ({\r\n    type: types.uiRemoveError\r\n});\r\n\r\nexport const startLoading = () => ({\r\n    type: types.uiStartLoading\r\n});\r\n\r\nexport const finishLoading = () => ({\r\n    type: types.uiFinishLoading\r\n});\r\n\r\n","import getData from \"../helpers/getData\";\r\nimport { types } from \"../types/types\";\r\nimport { finishLoading, startLoading } from './ui';\r\n\r\nexport const startLoginEmailPassword = ( email, password ) => {\r\n    return ( dispatch ) => {\r\n        dispatch(startLoading);\r\n\r\n        getData().then(( resp ) => {\r\n\r\n            let user = (resp.data.response.users).find( user => user.email === email);\r\n            \r\n            if( user && user.password === password ) {\r\n                dispatch(login( user.name ));\r\n                localStorage.setItem('user','{\"name\":\"' + user.name + '\", \"logged\":true}');\r\n                dispatch( finishLoading() );\r\n            }\r\n\r\n        }).catch( err => {\r\n            dispatch( finishLoading() );\r\n        });\r\n\r\n        dispatch(finishLoading);\r\n    }\r\n}\r\n\r\nexport const startLogout = () => {\r\n    return ( dispatch ) => {\r\n        localStorage.setItem('user', '{\"name\":\"\",\"logged\":false}');\r\n        dispatch( logout() );\r\n    }\r\n}\r\n\r\nexport const login = ( name ) => ({\r\n    type: types.login,\r\n    payload: {\r\n        name\r\n    }\r\n});\r\n\r\nexport const logout = () => ({\r\n    type: types.logout,\r\n});\r\n\r\n","import { useState } from 'react';\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = ( newFormState = initialState ) => {\r\n        setValues( newFormState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLoginEmailPassword } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nexport const Login = ( { history } ) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { loading } = useSelector( state => state.ui );\r\n\r\n    const [ formValues, handleInputChange ] = useForm({\r\n        usuario: 'pperez@perez.com',\r\n        password: 'pperezs123'\r\n    });\r\n\r\n    const { usuario, password } = formValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        const lastPath = localStorage.getItem('lastPath') || '/';\r\n\r\n        dispatch( startLoginEmailPassword( usuario, password ) );\r\n        history.replace( lastPath );\r\n    }\r\n \r\n    return (\r\n        <div className=\"welcome mt-primary mb-primary\">\r\n            <img \r\n                id=\"logo-aside-best-pizza\"\r\n                className=\"welcome__size-logo\"\r\n                src={`../assets/Login-Best-Pizza.png`} \r\n                alt=\"Logo de Best pizza\"\r\n            />\r\n\r\n            <h1 className=\"mt-secondary welcome__title\">Bienvenido</h1>\r\n            <h3 className=\"mt-third welcome__text\">A las mejores pizzas del país</h3>\r\n\r\n            <div className=\"container-inputs mt-secondary\">\r\n                \r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Usuario\"\r\n                    name=\"usuario\"\r\n                    className=\"input input--block input--user\"\r\n                    autoComplete=\"off\"\r\n                    value={ usuario }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Contraseña\"\r\n                    name=\"password\"\r\n                    className=\"input--block input--password mt-input\"\r\n                    value={ password }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n            </div>\r\n\r\n            <a href=\"#\" className=\"mt-third pointer\">¿Olvidaste tu contraseña?</a>\r\n\r\n            <button\r\n                className=\"btn__primary btn-block mt-secondary\"\r\n                onClick={(e) => { handleLogin(e) }}\r\n                disabled= { loading }\r\n            >Iniciar sesión</button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport { Login } from '../components/auth/Login';\n\nexport const AuthRouter = () => {\n    return (\n        <main className=\"auth__main\">\n            <Switch>\n                <Route \n                    exact\n                    path=\"/auth/login\"\n                    component={ Login }\n                />\n\n                <Redirect to=\"/auth/login\" />\n\n\n            </Switch>\n        </main>\n    )\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    loggedIn,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( loggedIn )\n                    ? ( <Redirect to=\"/\" /> )\n                    : ( <Component { ...props } /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    loggedIn: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\n\nexport const PrivateRoute = ({\n    loggedIn,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( loggedIn )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/auth/login\" /> )\n            )}\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    loggedIn: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\r\n\r\nconst BackgroundAside = () => {\r\n\r\n    return (\r\n        <aside className=\"relative\">\r\n            <img \r\n                className=\"object-fit\"\r\n                src={`../assets/imagebkg.png`} \r\n                alt=\"Fondo negro de la ilustración\" \r\n            />\r\n\r\n            <img \r\n                className=\"center-vertical-horizontal-absolute size-image-pizza absolute img-responsive \"\r\n                src={`../assets/Pizza.png`} \r\n                alt=\"Imagen de una Pizza\"\r\n            />\r\n\r\n            <img \r\n                id=\"logo-best-pizza-aside\"\r\n                className=\"absolute logo-aside img-responsive \"\r\n                src={`../assets/Logo.png`} \r\n                alt=\"Logo de Best pizza\"\r\n            />\r\n        </aside>\r\n    )\r\n}\r\n\r\nexport default BackgroundAside;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const NavBar = ({ history }) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() );\r\n        history.replace(\"/auth/login\");\r\n    }\r\n\r\n    return (\r\n        <nav className=\"align-center-right\">\r\n            <img \r\n                className=\"img_responsive size-icon-logout\" \r\n                src={`../assets/ic_contrasena.png`} \r\n                alt=\"ícono candado\"\r\n            />\r\n            <span \r\n                className=\"text-logout pointer\"\r\n                onClick={ handleLogout }\r\n            >Salir</span>\r\n        </nav>\r\n    )\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const RouteNavigation = ({ route }) => {\r\n    return (\r\n        <span className=\"route-navigation\">\r\n            { route }\r\n        </span>\r\n    )\r\n}\r\n\r\nRouteNavigation.propTypes = {\r\n    route: PropTypes.string.isRequired\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const TitlePage = ({ title, myStyle= \"\" }) => {\r\n    return (\r\n        <h1 className={` ${ myStyle }`}>\r\n            { title }\r\n        </h1>\r\n    )\r\n}\r\n\r\nTitlePage.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    myStyle: PropTypes.string\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const DescriptionPage = ({ description, myStyle= \"\" }) => {\r\n    return (\r\n        <div className={`description-page ${ myStyle }`}>\r\n            { description }\r\n        </div>\r\n    )\r\n}\r\n\r\nDescriptionPage.propTypes = {\r\n    description: PropTypes.string.isRequired,\r\n    myStyle: PropTypes.string\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport queryString from 'query-string';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const ItemStore = ({ itemStore, history }) => {\r\n\r\n    const params = queryString.parse(history.location.search);\r\n\r\n    let q = (params.q) ? `q=${params.q}&`: '';\r\n\r\n    return (\r\n        <Link to={ `/search?${ q }id=${ itemStore.id }&show=true` }\r\n            className=\"container-item-store pointer animate__bounceIn\"\r\n        >\r\n            <div className=\"item-store\">\r\n                <img \r\n                    className=\"img-item-store\"\r\n                    src={ `../assets/store/store-${itemStore.id}.png` } \r\n                    alt=\"Logo pizza\" \r\n                />\r\n            </div>\r\n            <div className=\"flex-column\">\r\n                <span className=\"title-item-store\">{ itemStore.name }</span>\r\n                <span className=\"addres-item-store\">{ itemStore.address }</span>\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\nItemStore.propTypes = {\r\n    itemStore: PropTypes.object.isRequired\r\n}","import React from 'react';\r\n\r\nimport { ItemStore } from './ItemStore';\r\n\r\nexport const Stores = ({ stores, history }) => {\r\n\r\n    return (\r\n        <div className=\"grid-shop mt-secondary\">\r\n            {\r\n                stores && stores.map( itemStore => {\r\n                    return <ItemStore \r\n                                key={ `itemStore${ itemStore.id }` } \r\n                                itemStore={ itemStore }\r\n                                history= { history }\r\n                            />\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const Footer = () => {\r\n    return (\r\n        <footer className=\"space-between align-center\">\r\n            <div>\r\n                <a \r\n                    href=\"https://facebook.com\"\r\n                    target=\"_blank\"\r\n                    rel=\"noreferrer\"\r\n                >\r\n                    <img \r\n                        className=\"footer__icons img-responsive pointer\"\r\n                        src={`../assets/logo-facebook.png`} \r\n                        alt=\"Logo best pizza blanco\" \r\n                    />\r\n                </a>\r\n\r\n                <a \r\n                    href=\"https://instagram.com\"\r\n                    target=\"_blank\"\r\n                    rel=\"noreferrer\"\r\n                >\r\n                    <img \r\n                        className=\"footer__icons img-responsive pointer\"\r\n                        src={`../assets/logo-instagram.png`} \r\n                        alt=\"Logo best pizza blanco\" \r\n                        />\r\n                </a>\r\n            </div>\r\n\r\n            <Link to=\"/\">\r\n                <img \r\n                    className=\"footer__icons img-responsive pointer\"\r\n                    src={`../assets/logo-best-pizza-white.png`} \r\n                    alt=\"Logo best pizza blanco\" \r\n                />\r\n            </Link>\r\n        </footer>\r\n    )\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const FormSearch = ({ history, searchText, handleInputChange }) => {\r\n\r\n    const handleSearch = (e) => {\r\n        e.preventDefault();\r\n        localStorage.setItem('lastPath', JSON.stringify(`?q=${ searchText }`) );\r\n        history.push(`?q=${ searchText }`);\r\n    }\r\n\r\n    const handleKeyUp = (e) => {\r\n        e.preventDefault();\r\n        if( e.target.value === '') {\r\n            history.push('/');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSearch }>\r\n            <input \r\n                type=\"text\"\r\n                className=\"input-search input--block mt-third\"\r\n                placeholder=\"Buscar una tienda\"\r\n                name=\"searchText\"\r\n                value={ searchText }\r\n                onChange={ handleInputChange }\r\n                onKeyUp= { handleKeyUp }\r\n            />\r\n\r\n            <button\r\n                id=\"btn_search\"\r\n                type=\"submit\"\r\n                className=\"btn__primary btn-block btn-responsive\"\r\n            >Buscar</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nFormSearch.propTypes = {\r\n    history: PropTypes.object.isRequired,\r\n    searchText: PropTypes.string.isRequired,\r\n    handleInputChange: PropTypes.func.isRequired\r\n}","import getData from \"../helpers/getData\";\r\nimport { types } from \"../types/types\";\r\nimport { finishLoading, startLoading } from './ui';\r\n\r\nexport const startLoadingStore = ( ) => {\r\n    return ( dispatch ) => {\r\n        dispatch(startLoading);\r\n        \r\n        getData().then(( resp ) => {\r\n            dispatch(setStores( resp.data.response.stores ));\r\n\r\n        }).catch( err => {\r\n            dispatch( finishLoading );\r\n        });\r\n\r\n        dispatch(finishLoading);\r\n    }\r\n}\r\n\r\nexport const setStores = ( stores ) => ({\r\n    type: types.dasboardStartLoadingStores,\r\n    payload: {\r\n        stores\r\n    }\r\n});\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const ItemPizza = ({ itemPizza }) => {\r\n\r\n    return (\r\n        <div className=\"container-item-store container-item-store--without-hover pointer animate__bounceIn\">\r\n            <div className=\"item-store\">\r\n                <img \r\n                    className=\"img-item-store\"\r\n                    src={ `../assets/pizzas/pizza-${itemPizza.id}.png` } \r\n                    alt=\"Logo pizza\" \r\n                />\r\n            </div>\r\n            <div className=\"flex-column\">\r\n                <span className=\"title-item-store\">{ itemPizza.name }</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nItemPizza.propTypes = {\r\n    itemPizza: PropTypes.object.isRequired\r\n}","import React from 'react';\r\n\r\nimport { ItemPizza } from './ItemPizza';\r\n\r\nexport const Pizzas = ({ pizzas }) => {\r\n\r\n    return (\r\n        <div className=\"grid-pizzas mt-third\">\r\n            {\r\n                pizzas && pizzas.map( itemPizza => {\r\n                    return <ItemPizza \r\n                                key={ `itemPizza${ itemPizza.id }` } \r\n                                itemPizza={ itemPizza }\r\n                            />\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Pizzas } from '../../templates/Pizzas';\r\n\r\nconst BodyModal = ({ storeToShow }) => {\r\n\r\n    return (\r\n        <div className=\"container__modal-body\">\r\n            <div className=\"flex-column\">\r\n                <span className=\"modal-body__text-description\">{ storeToShow.description }</span>\r\n                <span className=\"modal-body__text-description\">{ storeToShow.address }</span>\r\n            </div>\r\n            \r\n            <Pizzas pizzas={ storeToShow.products }/>\r\n        </div>\r\n    )\r\n}\r\n\r\nBodyModal.propTypes = {\r\n    storeToShow: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default BodyModal;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport queryString from 'query-string';\r\n\r\nconst HeaderModal = ({ currentItem= 1, storeToShow, history }) => {\r\n\r\n    const params = queryString.parse(history.location.search);\r\n    let q = (params.q) ? `?q=${params.q}`: '';        \r\n\r\n    return (\r\n        <div className=\"container__modal-header space-between\">\r\n            <h5 className=\"container__modal-header-title\">{storeToShow.name}</h5>\r\n            <img \r\n                className=\"modal-header__logo-store\"\r\n                src={`../assets/store/store-${ currentItem }.png`} \r\n                alt=\"Logo pizza\" \r\n            />\r\n            <Link \r\n                to={`/${ q }`}\r\n                className=\"modal-header__close-modal pointer\"\r\n            >x</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeaderModal;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport reactDom from 'react-dom';\r\nimport { useMemo } from 'react';\r\n\r\nimport BodyModal from './BodyModal';\r\nimport HeaderModal from './HeaderModal';\r\nimport { getStoresById } from '../../../selectors/getStoresById';\r\n\r\nconst ModalCarrousel = ({ \r\n                show = 'false',\r\n                currentItem,\r\n                stores,\r\n                history\r\n            }) => {\r\n\r\n    const [storeToShow] = useMemo(() => getStoresById( currentItem, stores ), [currentItem, stores]);\r\n\r\n    if(storeToShow === undefined || !storeToShow || storeToShow.length === 0) {\r\n        history.replace(\"/\");\r\n        return null;\r\n    }\r\n\r\n    return reactDom.createPortal (\r\n        <>\r\n            <div className={`backdrop ${ (show === 'false') && 'hidden' }`}>\r\n            </div>\r\n\r\n            <div className={`container ${ (show === 'false') && 'hidden' }`}>\r\n\r\n                    <div className=\"container__modal center-vertical-horizontal-absolute\">\r\n                        <div className=\"container__modal-scroll\">\r\n\r\n                            <HeaderModal \r\n                                currentItem= { currentItem }\r\n                                storeToShow= { storeToShow }\r\n                                history={ history }\r\n                                />\r\n\r\n                            <BodyModal \r\n                                currentItem= { currentItem }\r\n                                storeToShow= { storeToShow }\r\n                                />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </>\r\n        ,  document.querySelector(\"#modal\")\r\n    )\r\n}\r\n\r\nModalCarrousel.propTypes = {\r\n    show: PropTypes.string.isRequired,\r\n    currentItem: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default ModalCarrousel;","\nexport const getStoresById = ( id = 0, stores= [] ) => {\n\n    if ( id === 0 ) {\n        return null;\n    }\n\n    return stores.filter( store => store.id === id );\n\n}","import React, { useEffect, useMemo } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\nimport queryString from 'query-string';\r\n\r\nimport { NavBar } from '../nav-bar/NavBar';\r\nimport { RouteNavigation } from '../templates/RouteNavigation';\r\nimport { TitlePage } from '../templates/TitlePage';\r\nimport { DescriptionPage } from '../templates/DescriptionPage';\r\nimport { Stores } from './Stores';\r\nimport { Footer } from '../Footer';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { getStoresByName } from '../../selectors/getStoresByName';\r\nimport { FormSearch } from './FormSearch';\r\nimport { startLoadingStore } from '../../actions/dashboard';\r\nimport ModalCarrousel from '../modals/body-carrousel/ModalCarrousel';\r\n\r\nexport const Dashboard = ({ history }) => {\r\n\r\n    const location = useLocation();\r\n    const dispatch = useDispatch();\r\n\r\n    const params = queryString.parse(location.search);\r\n    const currentItem = parseInt(((params.id !== undefined) && params.id)  ||  0); //Store selected\r\n\r\n    const { auth: user, dashboard: { stores } } = useSelector(state => state); //User authenticate and Store loaded\r\n    const { q: query = '' } = queryString.parse( location.search ); //Text search on query\r\n    const [ formValues, handleInputChange ] = useForm({\r\n        searchText: query\r\n    }); //Handle input to search stores\r\n    const { searchText } = formValues;\r\n\r\n    useEffect(() => {\r\n        dispatch( startLoadingStore() );\r\n        localStorage.setItem( 'user', JSON.stringify(user) );\r\n        \r\n        const logoAside = document.getElementById(\"logo-best-pizza-aside\");\r\n        if( logoAside && logoAside !== undefined ) {\r\n            logoAside.style.display = \"block\";\r\n        }\r\n    }, [user, dispatch]);\r\n    \r\n    //Memorize results\r\n    const storesFiltered = useMemo(() => getStoresByName( query, stores ), [query, stores]);\r\n\r\n    return (\r\n        <div className=\"scroll-y container-dashboard\">\r\n            {\r\n                (currentItem !== 0) \r\n                    && <ModalCarrousel \r\n                        show={ params.show || 'false'}\r\n                        currentItem={ currentItem }\r\n                        stores={ storesFiltered }\r\n                        history={ history }\r\n                    />\r\n            }\r\n            <NavBar history={ history }/>\r\n            <RouteNavigation route=\"Pizzerías\"/>\r\n            <TitlePage title=\"Tiendas\" myStyle=\"mt-secondary\"/>\r\n            <DescriptionPage description=\"Escoge tu pizzería favorita\"/>\r\n\r\n            <FormSearch \r\n                history={ history }\r\n                searchText={ searchText }\r\n                handleInputChange={ handleInputChange }\r\n            />\r\n\r\n            {\r\n                (storesFiltered.length === 0) \r\n                    && <div className=\"mt-third not-store-founds\">No se han encontrado tiendas que coincidan con la búsqueda</div>\r\n            }\r\n\r\n            <Stores \r\n                stores={ storesFiltered }\r\n                history={ history }\r\n            />\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n","\nexport const getStoresByName = ( name = '', stores= [] ) => {\n\n    if ( name === '' ) {\n        return stores;\n    }\n\n    name = name.toLocaleLowerCase();\n    return stores.filter( store => store.name.toLocaleLowerCase().includes( name )  );\n\n}","import React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport { Dashboard } from '../components/dashboard/Dashboard';\r\n\r\nexport const DashboardRoutes = ({ location }) => {\r\n\r\n    localStorage.setItem('lastPath', location.pathname+location.search);\r\n\r\n    return (\r\n        <>\r\n            <Switch>\r\n                <Route path=\"/\" component={ Dashboard }/>\r\n                <Route exact path=\"/search/:q\" component={ Dashboard }/>\r\n                <Route exact path=\"/search/:id/:show\" component={ Dashboard }/>\r\n                <Route exact path=\"/search/:q/:id/:show\" component={ Dashboard }/>\r\n\r\n                <Redirect to=\"/\" />\r\n            </Switch>\r\n        </>\r\n    )\r\n}\r\n\r\n","import React, { useEffect, useState } from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect\n  } from 'react-router-dom';\n  import { useDispatch, useSelector } from 'react-redux';\n\nimport { AuthRouter } from './AuthRouter';\nimport { PublicRoute } from './PublicRoute';\nimport { PrivateRoute } from './PrivateRoute';\nimport BackgroundAside from '../components/BackgroundAside';\nimport { login } from '../actions/auth';\nimport { DashboardRoutes } from './DashboardRoutes';\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch();\n    const { logged, name } = useSelector( state => state.auth );\n\n    const [checking, setChecking] = useState(true);\n    const [loggedIn, setLoggedIn] = useState(false);\n\n    useEffect(() => {\n        let loggedLocalstorage = JSON.parse(localStorage.getItem('user')) || { name: '', logged: false };\n        \n        if( logged || loggedLocalstorage.logged ) {\n            dispatch( login( name || loggedLocalstorage.name )); \n            setLoggedIn( true );\n            \n        } else {\n            setLoggedIn( false );\n        }\n        \n        setChecking( false );\n    }, [ dispatch, setChecking, setLoggedIn, logged, name ]);\n\n    if( checking ) {\n        return (\n            <h1>Por favor espere...</h1>\n        );\n    }\n\n    return (\n        <Router>\n            <div className=\"grid-layaout overflow-hidden\">\n                \n                <BackgroundAside />\n                \n                <Switch>\n\n\n                    <PublicRoute\n                        path=\"/auth\"\n                        component={ AuthRouter }\n                        loggedIn= { loggedIn }\n                    />\n\n                    <PrivateRoute\n                        path=\"/\"\n                        component={ DashboardRoutes }\n                        loggedIn={ loggedIn }\n                    />\n\n                    <Redirect to=\"/auth/login\" />\n\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n","import { types } from \"../types/types\";\r\nimport PropTypes from 'prop-types'\r\n\r\n/*\r\n    {\r\n        name: 'Carlos Gamboa',\r\n        logged: false\r\n    }\r\n*/\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n    switch( action.type ) {\r\n        case types.login:\r\n        return {\r\n            name: action.payload.name,\r\n            logged: true\r\n        }\r\n\r\n        case types.logout:\r\n            return {  }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nauthReducer.propTypes = {\r\n    state: PropTypes.object,\r\n    action: PropTypes.object.isRequired\r\n}","import { types } from \"../types/types\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const dashBoardReducer = (state = {}, action) => {\r\n    switch( action.type ) {\r\n        \r\n        case types.dasboardStartLoadingStores:\r\n            return {\r\n                stores: action.payload.stores\r\n            }\r\n\r\n        case types.logout:\r\n            return { };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ndashBoardReducer.propTypes = {\r\n    state: PropTypes.object,\r\n    action: PropTypes.object.isRequired\r\n}","import { types } from \"../types/types\";\r\nimport PropTypes from 'prop-types'\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\nexport const uiReducer = ( state= initialState, action) => {\r\n    switch( action.type ) {\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n\r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: null\r\n            }\r\n\r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nuiReducer.propTypes = {\r\n    state: PropTypes.object,\r\n    action: PropTypes.object.isRequired\r\n}\r\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { dashBoardReducer } from '../reducers/dashboardReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    dashboard: dashBoardReducer\r\n});\r\n\r\nexport const store = createStore( \r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);","import { createContext } from 'react';\n\nexport const AuthContext = createContext();","import React, { useEffect, useReducer } from 'react';\nimport { AppRouter } from './routers/AppRouter';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\nimport './styles/styles.scss'\nimport { authReducer } from './reducers/authReducer';\nimport { AuthContext } from './components/auth/AuthContext';\n\nconst init = () => {\n    return JSON.parse(localStorage.getItem('user')) || { name: '', logged: false };\n}\n\nexport const App = () => {\n\n    const [ user, dispatch ] = useReducer(authReducer, {}, init);\n\n    useEffect(() => {\n        localStorage.setItem( 'user', JSON.stringify(user) );\n    }, [user]);\n\n    return (\n        <Provider store={ store }>\n            <AuthContext.Provider value={{ user, dispatch }}>\n                <AppRouter />\n            </AuthContext.Provider>\n        </Provider>\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}